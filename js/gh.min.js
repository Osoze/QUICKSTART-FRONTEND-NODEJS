if(typeof require==="undefined"){var require=function(pk){if(pk==="ul"){return{deepMerge:function(){var dst={},src,p,args=[].splice.call(arguments,0);while(args.length>0){src=args.splice(-1)[0];if(toString.call(src)!="[object Object]"){continue}for(p in src){if(!src.hasOwnProperty(p)){continue}if(toString.call(src[p])=="[object Object]"){dst[p]=this.deepMerge(src[p],dst[p]||{})}else{if(src[p]!==undefined){dst[p]=src[p]}}}}return dst}}}if(pk==="querystring"){return{stringify:function(obj){var str="";Object.keys(obj).forEach(function(c){str+="&"+encodeURIComponent(c)+"="+encodeURIComponent(obj[c])});return str.substr(1)}}}return null}}var Ul=require("ul"),Jsonreq=require("jsonrequest"),QueryString=require("querystring");function GitHub(options){options=options||{};this.host=options.host||"https://api.github.com/";this.token=options.token;this.user_agent=options.user_agent||"gh.js"}GitHub.prototype.req=function(url,data,callback){var self=this,req=null,url=self.host+url;if(typeof data==="function"){callback=data;data=undefined}if(self.token){url+=url.indexOf("?")>-1?"&":"?";url+="access_token="+self.token}if(typeof Jsonreq==="function"){req=Jsonreq({url:url,data:data,headers:{"User-agent":self.user_agent}},function(err,data,res){self.checkResponse(err,data,res,callback)})}else{req=new XMLHttpRequest;callback=callback||function(){};req.open("GET",url,true);req.send();req.onreadystatechange=function(){if(req.readyState!==4){return}self.checkResponse(null,req.responseText,{statusCode:req.status},callback)}}return req};GitHub.prototype.checkResponse=function(err,data,res,callback){if(typeof data==="string"){data=JSON.parse(data)}if(err